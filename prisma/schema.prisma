generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  studentId  String       @unique
  firstName  String
  lastName   String
  email      String       @unique
  picture    String?
  role       Role         @default(MEMBER)
  souce      Souce[]
  Workspace  Workspace[]
  Permission Permission[]
  Appication Appication[]
}

model Souce {
  id        Int    @id @default(autoincrement())
  installID String @unique
  User      User?  @relation(fields: [userId], references: [id])
  userId    Int?
}

model Workspace {
  id         Int          @id @default(autoincrement())
  name       String
  User       User?        @relation(fields: [userId], references: [id])
  userId     Int?
  permission Permission[]
  Appication Appication[]
  Database   Database[]
}

model Appication {
  id          Int       @id @default(autoincrement())
  name        String
  gitHub      String
  buildPack   String
  config      Json
  createBy    User      @relation(fields: [userId], references: [id])
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId Int
  userId      Int
}

model Database {
  id          Int        @id @default(autoincrement())
  name        String
  images      String
  config      Json
  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId Int?
}

model Permission {
  id          Int        @id @default(autoincrement())
  role        Role
  User        User?      @relation(fields: [userId], references: [id])
  userId      Int?
  Workspace   Workspace? @relation(fields: [workspaceId], references: [id])
  workspaceId Int?
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}
